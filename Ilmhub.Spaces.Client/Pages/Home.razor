@page "/"
@using Ilmhub.Spaces.Client.Models
@using Ilmhub.Spaces.Client.Interfaces
@using System.Text.RegularExpressions
@using MudBlazor
@inject IDialogService DialogService
@inject ILeadService LeadService

<MudContainer MaxWidth="MaxWidth.ExtraExtraLarge" Class="pa-4">
    <MudStack Row="true" AlignItems="@AlignItems.Center" Spacing="3">
        <MudButton Variant="Variant.Outlined"
                   EndIcon="@Icons.Material.Filled.Add"
                   Color="Color.Tertiary"
                   Class="ma-4">
            Qo'shish
        </MudButton>
        <MudTextField T="string" ValueChanged="@(s => OnSearch(s))" Placeholder="Qidirish"
                      Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Filled.Search"
                      IconSize="Size.Medium" Class="mt-0"></MudTextField>
        <MudMenu FullWidth="false" Class="menu-position">
            <ActivatorContent>
                <MudChip T="string" Icon="@Icons.Material.Filled.Person" Color="Color.Primary">Status</MudChip>
            </ActivatorContent>
            <ChildContent>
                @foreach (var column in new[] { "Barchasi", "Yangi Lidlar", "Bog'lanilgan", "Kuzatuvda", "Yakuniy Holat" })
                {
                    <MudMenuItem Icon="@GetIconForColumn(column)" Style="@($"color: {GetColorForColumn(column)};")" @onclick="() => SetCurrentStatus(column)">@column</MudMenuItem>
                }
            </ChildContent>
        </MudMenu>
        <MudSpacer />
        <MudSpacer />
        <MudSpacer />
        <MudSpacer />
    </MudStack>

    <div class="hide-scrollbar" style="overflow-x: auto; white-space: nowrap;">
        <MudDropContainer T="Lead" @ref="dropContainer" Items="@filteredLeads" ItemsSelector="@((item,column) => GetColumnForStatus(item.Status) == column)" ItemDropped="LeadUpdated" Class="d-flex flex-wrap flex-grow-1">
            <ChildContent>
            @foreach (var column in new[] { "Yangi Lidlar", "Bog'lanilgan", "Kuzatuvda", "Yakuniy Holat" })
            {
                <MudPaper Elevation="0" Style="height: calc(100vh - 175px); flex: 1; display: flex; flex-direction: column; min-width: 200px; max-width: 400px;" Class="pa-4 mx-1 transparent rounded-lg">
                    <MudList T="Lead" Style="flex-grow: 1; overflow-y: auto;" Class="d-flex flex-column mud-height-full">
                        <MudListSubheader>
                            <MudText Typo="Typo.h6" Class="mt-0">@column</MudText>
                        </MudListSubheader>
                        <MudDropZone T="Lead" Identifier="@column" Class="flex-grow-1 overflow-y-auto hide-scrollbar" AllowReorder="true"/>
                    </MudList>
                </MudPaper>
            }
            </ChildContent>
            <ItemRenderer>
                <MudCard Class="ma-4 rounded-lg" Elevation="5" @onclick="() => ShowLeadDetails(context)">
                    <MudCardContent>
                        <MudStack Row="true" AlignItems="@AlignItems.Center">
                            <MudMenu Dense="true" MaxHeight="200">
                                <ActivatorContent>
                                    <MudChip T="string" Variant="Variant.Text" Color="@GetColorForStatus(context.Status)" Size="Size.Small">@context.Status</MudChip>
                                </ActivatorContent>
                                <ChildContent>
                                    @foreach (LeadStatus status in Enum.GetValues(typeof(LeadStatus)))
                                    {
                                        <MudMenuItem OnClick="@(() => UpdateLeadStatus(context, status))">@status</MudMenuItem>
                                    }
                                </ChildContent>
                            </MudMenu>
                            <MudText Typo="Typo.body2">@(context.Name?.Substring(0, Math.Min(context.Name?.Length ?? 0, 20)))</MudText>
                        </MudStack>
                        <MudStack>
                            <MudStack Row="true" Justify="@Justify.FlexStart" AlignItems="@AlignItems.Start">
                                <MudIcon Color="Color.Info" Style="font-size: small;" Icon="@Icons.Material.Rounded.LocalPhone" />
                                <MudText Typo="Typo.body2">@FormatPhoneNumber(context.Phone)</MudText>
                                <MudText Color="Color.Tertiary" Typo="Typo.body2">@(context.ModifiedAt?.ToString("dd MMM HH:mm") ?? context.CreatedAt.ToString("dd MMM HH:mm"))</MudText>
                            </MudStack>
                        </MudStack>
                    </MudCardContent>
                </MudCard> 
            </ItemRenderer>
        </MudDropContainer>
    </div>
</MudContainer>